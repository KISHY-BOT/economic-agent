openapi: 3.1.0
info:
  title: Economic Agent API (Hybrid-Pro)
  version: "2.1.0"

servers:
  - url: https://economic-agent-production.up.railway.app
    description: Production server

security:
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

  schemas:
    RunConfig:
      type: object
      properties:
        horizon:
          type: integer
          default: 30
          minimum: 1
        models:
          type: array
          items:
            type: string
            enum: [arima, random_forest, monte_carlo]
          default: [arima, random_forest, monte_carlo]
        series:
          type: object
          nullable: true
          description: Serie opcional provista por el usuario.
        notes:
          type: string
          nullable: true
        async_mode:
          type: boolean
          default: false

    AgentResult:
      type: object
      description: Resultado agregado del agente; campos pueden variar según modelos disponibles.
      properties:
        inputs:
          type: object
          properties:
            oficial_last: { type: number, nullable: true }
            mep_last: { type: number, nullable: true }
            timestamp: { type: string, description: ISO 8601 }
        params:
          type: object
          properties:
            horizon: { type: integer }
            models:
              type: array
              items: { type: string, enum: [arima, random_forest, monte_carlo] }
            notes: { type: string, nullable: true }
        arima_forecasts:
          type: array
          items: { type: number }
        random_forest_forecasts:
          type: array
          items: { type: number }
        montecarlo:
          type: object
          properties:
            expected_terminal_value: { type: number, nullable: true }
            var_95: { type: number, nullable: true }
        notice:
          type: string
          description: Nota informativa (p. ej., ausencia de MEP).
        warnings:
          type: array
          items: { type: string }
        timestamp:
          type: string
          description: ISO 8601

    RunSyncResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/AgentResult'
      required: [result]

    RunAsyncResponse:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
          example: "23cd9fd9-ed33-48c2-acdb-ecafed064fa9"
        status:
          type: string
          enum: [queued, running]
          example: queued
      required: [job_id, status]

    JobStatus:
      type: object
      properties:
        status:
          type: string
          enum: [queued, running, done, failed]
        config:
          $ref: '#/components/schemas/RunConfig'
        result:
          $ref: '#/components/schemas/AgentResult'
        error:
          type: string
      required: [status]

    BcraPassthroughResponse:
      oneOf:
        - type: object
          description: BCRA devolvió JSON; se reenvía como tal.
          properties: {}
          additionalProperties: {}
        - type: object
          description: BCRA devolvió texto; se envuelve con tipo de contenido.
          required: [content, content_type]
          properties:
            content:
              type: string
            content_type:
              type: string

  responses:
    Unauthorized:
      description: API key inválida o ausente.
    TooManyRequests:
      description: Rate limit excedido.
    BadRequest:
      description: Parámetros inválidos (ej. fecha mal formateada, identificación incorrecta).
    UpstreamError:
      description: Error del upstream BCRA.
    UpstreamTimeout:
      description: Timeout al conectar con BCRA.

paths:
  /health:
    get:
      operationId: health
      summary: Health
      security: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: ok }
                  bcra_status: { type: string, example: active }

  /metrics:
    get:
      operationId: metrics
      summary: Métricas (Prometheus text)
      security: []
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string

  /metrics.json:
    get:
      security: []
      operationId: metricsJson
      summary: Métricas en formato JSON
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  econ_jobs_total:   { type: integer }
                  econ_jobs_running: { type: integer }
                  econ_jobs_done:    { type: integer }
                  econ_jobs_failed:  { type: integer }

  # ============= BCRA Endpoints =============
  /bcra/cheques/entidades:
    get:
      operationId: chequesEntidades
      summary: Listado de entidades bancarias
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  /bcra/cheques/denunciados/{codigo_entidad}/{numero_cheque}:
    get:
      operationId: chequesDenunciados
      summary: Consulta si un cheque está denunciado
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: codigo_entidad
          required: true
          schema: { type: integer }
        - in: path
          name: numero_cheque
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  /bcra/deudores/{identificacion}:
    get:
      operationId: deudores
      summary: Central de Deudores por identificación (11 dígitos)
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: identificacion
          required: true
          schema:
            type: string
            pattern: "^[0-9]{11}$"
            example: "20123456789"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "400": { $ref: '#/components/responses/BadRequest' }
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  /bcra/estadisticas-cambiarias/maestros/divisas:
    get:
      operationId: cambiariasMaestrosDivisas
      summary: Maestro de divisas (monedas ISO)
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  /bcra/estadisticas-cambiarias/cotizaciones:
    get:
      operationId: cambiariasCotizaciones
      summary: Cotizaciones cambiarias del BCRA (última o por fecha)
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: fecha
          schema:
            type: string
            format: date
            example: "2025-08-14"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "400": { $ref: '#/components/responses/BadRequest' }
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  /bcra/estadisticas-cambiarias/cotizaciones/{moneda}:
    get:
      operationId: cambiariasEvolucion
      summary: Evolución histórica de cotización de una moneda
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: moneda
          required: true
          schema:
            type: string
            example: "EUR"
        - in: query
          name: fechadesde
          schema:
            type: string
            format: date
            example: "2025-08-01"
        - in: query
          name: fechahasta
          schema:
            type: string
            format: date
            example: "2025-08-14"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "400": { $ref: '#/components/responses/BadRequest' }
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  /bcra/monetarias/{id_var}:
    get:
      operationId: monetarias
      summary: Serie monetaria v3 por ID con filtro de fechas
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id_var
          required: true
          schema: { type: integer }
          example: 7
        - in: query
          name: desde
          schema:
            type: string
            format: date
            example: "2025-08-05"
        - in: query
          name: hasta
          schema:
            type: string
            format: date
            example: "2025-08-11"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "400": { $ref: '#/components/responses/BadRequest' }
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  /bcra/principales-variables:
    get:
      operationId: principalesVariablesList
      summary: Listado de principales variables del BCRA
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  /bcra/principales-variables/{variable_id}:
    get:
      operationId: principalesVariablesData
      summary: Series de una variable del BCRA
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: variable_id
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  /bcra/passthrough:
    get:
      operationId: bcraPassthrough
      summary: Proxy a cualquier path público del BCRA
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: path
          required: true
          description: >
            Path comenzando con "/" y URL-encoded. Ej: /estadisticas/v3.0/monetarias/7
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcraPassthroughResponse'
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "502": { $ref: '#/components/responses/UpstreamError' }
        "504": { $ref: '#/components/responses/UpstreamTimeout' }

  # ============= Agent Endpoints =============
  /run:
    post:
      operationId: runAgent
      summary: Ejecuta el agente económico (sync o async)
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunConfig'
            examples:
              sync:
                summary: Ejecución síncrona
                value: { "horizon": 5, "models": ["arima","random_forest"], "async_mode": false }
              async:
                summary: Ejecución asíncrona
                value: { "horizon": 5, "models": ["arima","random_forest"], "async_mode": true }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/RunSyncResponse'
                  - $ref: '#/components/schemas/RunAsyncResponse'
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }

  /status/{job_id}:
    get:
      operationId: jobStatus
      summary: Estado de un job asíncrono
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: job_id
          required: true
          schema: { type: string }
          example: "23cd9fd9-ed33-48c2-acdb-ecafed064fa9"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
        "401": { $ref: '#/components/responses/Unauthorized' }
        "429": { $ref: '#/components/responses/TooManyRequests' }
        "404":
          description: Job no encontrado
